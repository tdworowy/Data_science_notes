#!/usr/bin/env python
# coding: utf-8

# In[1]:


#RBM- Restricted Boltzmann machine A restricted Boltzmann machine is a 
#generative stochastic artificial neural network that can learn a probability 
#distribution over its set of inputs.

from sklearn import preprocessing
from sklearn.neural_network import BernoulliRBM
from sklearn.datasets import fetch_olivetti_faces
import matplotlib.pyplot as plt
import numpy as np

def rbm(dataset, n_components):
    X = preprocessing.binarize(preprocessing.scale(dataset.data.astype(float)), 0.5)
    rbm = BernoulliRBM(n_components = n_components, learning_rate=0.01, n_iter=100)
    rbm.fit(X)
    plt.figure(figsize=(4.2,4))
    for i, comp in enumerate(rbm.components_):
        plt.subplot(int(np.sqrt(n_components+1)),
                   int(np.sqrt(n_components+1)),i+1)
        plt.imshow(comp.reshape((64,64)),cmap=plt.cm.gray_r,
                   interpolation='nearest')
        plt.xticks(());plt.yticks(())
    plt.suptitle(str(n_components)+' Components generated by RBM', fontsize=16)
    plt.subplots_adjust(0.08,0.02,0.92,0.85,0.08,0.23)
    plt.show()
    
    


# In[2]:


olivetti_faces = fetch_olivetti_faces()


# In[3]:


rbm(olivetti_faces, 64)


# In[4]:


rbm(olivetti_faces, 100)


# In[5]:


rbm(olivetti_faces, 144)


# In[9]:


rbm(olivetti_faces, 9)


# In[ ]:




